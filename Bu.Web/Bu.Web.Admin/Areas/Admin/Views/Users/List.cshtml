@using Bu.Web.Admin.Areas.Admin.Models.Users
@model Bu.Web.Admin.Areas.Admin.Models.Users.ListModel
@inject IApplicationClock ApplicationClock
@inject IAdminFixedContext AdminFixedContext
@{
    this.ViewData["Title"] = "Users";
    this.ViewData["Icon"] = "bi bi-person";
}

<form method="get" autocomplete="off">
    @this.Html.RenderBootstrapValidationSummary()
    <input asp-for="Input.PageIndex" type="hidden"/>
    <input asp-for="Input.PageSize" type="hidden"/>
    <input asp-for="Input.Sort" type="hidden"/>
    <input asp-for="Input.Desc" type="hidden"/>
    <div class="row g-3 mb-3">
        <div class="col-md-12 col-lg-auto mt-md-auto mt-xl-3 text-xl-center">
            <a asp-action="New" class="btn btn-success w-100"><i class="bi bi-plus"></i> New User</a>
        </div>
        <div class="col-lg m-0"></div>
        <div class="col-md-4 col-lg-3">
            <div class="row">
                <label asp-for="@this.Model.Input.Status" class="col-md-12 col-lg-auto col-form-label"></label>
                <div class="col-md-12 col-lg">
                    <select class="form-select" asp-for="@this.Model.Input.Status" asp-items="@this.Html.GetEnumSelectList<Bu.Web.Data.Entities.User.Statuses>()"></select>
                    <span asp-validation-for="@this.Model.Input.Status"></span>
                </div>
            </div>
        </div>
        <div class="col-md-8 col-lg-5 col-xl-4 col-xxl-3">
            <div class="row">
                <label asp-for="@this.Model.Input.Search" class="col-md-12 col-lg-auto col-form-label"></label>
                <div class="col-md-12 col-lg">
                    <input class="form-control" asp-for="@this.Model.Input.Search"/>
                    <span asp-validation-for="@this.Model.Input.Search"></span>
                </div>
            </div>
        </div>
        <div class="col-md-12 col-lg-auto mt-xl-3 text-xl-center">
            <button class="btn btn-secondary w-100"><i class="bi bi-search"></i> Search</button>
        </div>
    </div>
</form>

@this.Html.RenderBootstrapTable(this.Model.Input, new BootstrapTable<Bu.Web.Data.Entities.User, ListInputModel>(this.Model.PageData)
{
    Head = @<tr>
               <th>Actions</th>
               @this.Html.RenderTableHeader("Name", nameof(Bu.Web.Data.Entities.User.Name), this.Model.Input, SortType.Text)
               @this.Html.RenderTableHeader("Email", nameof(Bu.Web.Data.Entities.User.Email), this.Model.Input, SortType.Text)
               <th>Roles</th>
               <th>Mobile</th>
               <th>Phone</th>
               @this.Html.RenderTableHeader("Department", nameof(Bu.Web.Data.Entities.User.DepartmentId), this.Model.Input, SortType.Text)
               @this.Html.RenderTableHeader("Expiry Date", nameof(Bu.Web.Data.Entities.User.ExpiryDateUtc), this.Model.Input, SortType.Text)
               @this.Html.RenderTableHeader("Status", nameof(Bu.Web.Data.Entities.User.Status), this.Model.Input, SortType.Text)
           </tr>,
    Body = @<tr class="@(item.Data.ExpiryDateUtc < ApplicationClock.UtcNow ? "table-danger" : "")">
               <td class="text-nowrap">
                   <a class="btn-sm btn btn-secondary" title="Edit" asp-area="Admin" asp-controller="Users" asp-action="Edit" asp-route-id="@item.Data.UserId">
                       <i class="bi bi-pencil"></i>
                   </a>
                   <a class="btn-sm btn btn-danger" title="Delete" asp-area="Admin" asp-controller="Users" asp-action="Delete" asp-route-id="@item.Data.UserId">
                       <i class="bi bi-trash"></i>
                   </a>
                   <a class="btn-sm btn btn-secondary" title="User Areas" asp-area="Admin" asp-controller="Users" asp-action="Areas" asp-route-id="@item.Data.UserId">
                        <i class="bi bi-globe"></i>
                   </a>
               </td>
               <td>
                   <a asp-area="Admin" asp-controller="Users" asp-action="Display" asp-route-id="@item.Data.UserId">
                       @item.Data.Name
                   </a>
               </td>
               <td>@item.Data.Email</td>
               <td>
                   @foreach (UserRole role in item.Data.UserRoles!)
                   {
                       switch (role.Role)
                       {
                           case UserRole.Roles.SuperAdministrator:
                               <span class="badge bg-danger">@role.Role.GetDescription()</span>
                               break;
                           case UserRole.Roles.Administrator:
                               <span class="badge bg-warning">@role.Role.GetDescription()</span>
                               break;
                           case UserRole.Roles.Webmaster:
                               <span class="badge bg-secondary">@role.Role.GetDescription()</span>
                               break;
                           default:
                               throw new InvalidOperationException(role.Role.ToString());
                       }
                   }
               </td>
               <td>@item.Data.MobileNo</td>
               <td>@item.Data.PhoneNo</td>
               <td>@(this.AdminFixedContext.GetDepartmentById(item.Data.DepartmentId, INamedEntity.Names.Alias, INamedEntity.Names.Alias))</td>
               <td>@item.Data.ExpiryDateUtc?.ToUserDateTimeFromUtc(this.User)</td>
               <td>@item.Data.Status</td>
           </tr>,
    EmptyRow = @<tr>
                   <td class="4">No record found.</td>
               </tr>,
})